#include "Error.hpp"

Acamarachi::Vulkan::VulkanError Acamarachi::Vulkan::VkResultToVulkanError(VkResult res)
{
    switch (res)
    {
    case VK_SUCCESS:
        assert(false);
        return VulkanError::ERROR_UNKNOWN;
    case VK_NOT_READY:
        return VulkanError::NOT_READY;
    case VK_TIMEOUT:
        return VulkanError::TIMEOUT;
    case VK_EVENT_SET:
        return VulkanError::EVENT_SET;
    case VK_EVENT_RESET:
        return VulkanError::EVENT_RESET;
    case VK_INCOMPLETE:
        return VulkanError::INCOMPLETE;
    case VK_ERROR_OUT_OF_HOST_MEMORY:
        return VulkanError::ERROR_OUT_OF_HOST_MEMORY;
    case VK_ERROR_OUT_OF_DEVICE_MEMORY:
        return VulkanError::ERROR_OUT_OF_DEVICE_MEMORY;
    case VK_ERROR_INITIALIZATION_FAILED:
        return VulkanError::ERROR_INITIALIZATION_FAILED;
    case VK_ERROR_DEVICE_LOST:
        return VulkanError::ERROR_DEVICE_LOST;
    case VK_ERROR_MEMORY_MAP_FAILED:
        return VulkanError::ERROR_MEMORY_MAP_FAILED;
    case VK_ERROR_LAYER_NOT_PRESENT:
        return VulkanError::ERROR_LAYER_NOT_PRESENT;
    case VK_ERROR_EXTENSION_NOT_PRESENT:
        return VulkanError::ERROR_EXTENSION_NOT_PRESENT;
    case VK_ERROR_FEATURE_NOT_PRESENT:
        return VulkanError::ERROR_FEATURE_NOT_PRESENT;
    case VK_ERROR_INCOMPATIBLE_DRIVER:
        return VulkanError::ERROR_INCOMPATIBLE_DRIVER;
    case VK_ERROR_TOO_MANY_OBJECTS:
        return VulkanError::ERROR_TOO_MANY_OBJECTS;
    case VK_ERROR_FORMAT_NOT_SUPPORTED:
        return VulkanError::ERROR_FORMAT_NOT_SUPPORTED;
    case VK_ERROR_FRAGMENTED_POOL:
        return VulkanError::ERROR_FRAGMENTED_POOL;
    case VK_ERROR_UNKNOWN:
        return VulkanError::ERROR_UNKNOWN;
    case VK_ERROR_OUT_OF_POOL_MEMORY:
        return VulkanError::ERROR_OUT_OF_POOL_MEMORY;
    case VK_ERROR_INVALID_EXTERNAL_HANDLE:
        return VulkanError::ERROR_INVALID_EXTERNAL_HANDLE;
    case VK_ERROR_FRAGMENTATION:
        return VulkanError::ERROR_FRAGMENTATION;
    case VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS:
        return VulkanError::ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS;
    case VK_PIPELINE_COMPILE_REQUIRED:
        return VulkanError::PIPELINE_COMPILE_REQUIRED;
    case VK_ERROR_SURFACE_LOST_KHR:
        return VulkanError::ERROR_SURFACE_LOST_KHR;
    case VK_ERROR_NATIVE_WINDOW_IN_USE_KHR:
        return VulkanError::ERROR_NATIVE_WINDOW_IN_USE_KHR;
    case VK_SUBOPTIMAL_KHR:
        return VulkanError::SUBOPTIMAL_KHR;
    case VK_ERROR_OUT_OF_DATE_KHR:
        return VulkanError::ERROR_OUT_OF_DATE_KHR;
    case VK_ERROR_INCOMPATIBLE_DISPLAY_KHR:
        return VulkanError::ERROR_INCOMPATIBLE_DISPLAY_KHR;
    case VK_ERROR_VALIDATION_FAILED_EXT:
        return VulkanError::ERROR_VALIDATION_FAILED_EXT;
    case VK_ERROR_INVALID_SHADER_NV:
        return VulkanError::ERROR_INVALID_SHADER_NV;
    case VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR;
    case VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR;
    case VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR;
    case VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR;
    case VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR;
    case VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR:
        return VulkanError::ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR;
    case VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT:
        return VulkanError::ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT;
    case VK_ERROR_NOT_PERMITTED_KHR:
        return VulkanError::ERROR_NOT_PERMITTED_KHR;
    case VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT:
        return VulkanError::ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT;
    case VK_THREAD_IDLE_KHR:
        return VulkanError::THREAD_IDLE_KHR;
    case VK_THREAD_DONE_KHR:
        return VulkanError::THREAD_DONE_KHR;
    case VK_OPERATION_DEFERRED_KHR:
        return VulkanError::OPERATION_DEFERRED_KHR;
    case VK_OPERATION_NOT_DEFERRED_KHR:
        return VulkanError::OPERATION_NOT_DEFERRED_KHR;
    case VK_ERROR_COMPRESSION_EXHAUSTED_EXT:
        return VulkanError::ERROR_COMPRESSION_EXHAUSTED_EXT;
    case VK_ERROR_INCOMPATIBLE_SHADER_BINARY_EXT:
        return VulkanError::ERROR_INCOMPATIBLE_SHADER_BINARY_EXT;
    default:
        return VulkanError::ERROR_UNKNOWN;
    }
}